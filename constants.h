#pragma once

#include <vector>

// Константы, которые представляют сами себя: + - * / %  ( ) { }
const char         NUMBER = 'N';	// Константа используется программой и предназначена для обозначения цифры в стеке лексем.
const char       VARIABLE = 'V';	// Константа используется программой и предназначена для обозначения названия переменной.
const char        INITVAR = 'I';	// Константа используется программой и предназначена для обозначения инициализации переменной.
const char      CONSTANTS = 'C';	// Константа используется программой и предназначена для обозначения определённой константы.
const char      FUNCTIONS = 'F';	// Константа используется программой и предназначена для обозначения определённых функций.
const char      PARAMETER = 'P';	// Константа используется программой и предназначена для обозначения параметра функции.
const char        EQUALLY = '~';	// Константа используется программой и предназначена для обозначения равенства. Двойной знак равно ==
const char      EXHIBITOR = 'e';	// Константа используется программой для определения числа в экспоненциальном виде: 4.845e+03.
const char           NEXT = ',';	// Константа используется программой для записи нескольких выражений в одну строку.
const std::string   INPUT = ">> ";	// Приглашение пользователя к вводу.
const std::string  RESULT = "= ";	// Вывод ответа выражения.

const char        INITIAL = '=';	// Инициализация переменной.
const char       SHOWVARS = 'V';	// Просмотр определённых переменных.
const char     SHOWCONSTS = 'C';	// Просмотр определённых констант.
const char      SHOWFUNCS = 'F';	// Просмотр определённых функций.
const char           HELP = 'H';	// Помощь. Вывод информации о программе.
const char      FACTORIAL = '!';	// Факториал
const char           EXIT = '#';	// Выход

std::vector<char> specsymbols{INITIAL, FACTORIAL, EXIT, NEXT, '+', '-', '*', '/', '%', '>', '<', '(', ')', '{', '}', '[', ']'};
std::vector<char> hotkeys{ SHOWVARS, SHOWCONSTS, SHOWFUNCS, HELP };